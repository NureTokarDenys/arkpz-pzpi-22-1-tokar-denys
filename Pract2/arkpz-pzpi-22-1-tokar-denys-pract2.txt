  REFACTORING METHODS
  Методи рефакторингу


Extract Function, Extract Variable, Replace Nested
          Conditional with Guard Clauses
Виділення функції, виділення змінної, заміна вкладених умов захисними
                               виразами




                                            Виконав ст. гр. ПЗПІ-22-1 Токар Денис
                                                    EXTRACT FUNCTION
                                                                              Виділення функції

Мета: Виділення фрагмента коду в окрему функцію для підвищення читабельності та
модульності.
Коли використовувати: Коли блок коду виконує одну логічну операцію, повторюється
в різних місцях або занадто великий.
Переваги:
• Збільшує читабельність, роблячи код більш зрозумілим.
• Спрощує тестування, оскільки кожна функція виконує одну конкретну задачу.
• Зменшує дублювання коду.
• Покращує підтримуваність, оскільки зміни можна вносити в одному місці.

                                                                                                  1
ПРИКЛАД   EXTRACT FUNCTION
                  Виділення функції




                                      2
                                                     EXTRACT VARIABLE
                                                                         Виділення змінної


Мета: Виділення складного виразу або результату проміжного обчислення в окрему змінну з
описовим ім'ям.
Коли використовувати: Коли вираз використовується кілька разів в коді, або коли він
занадто складний для розуміння.
Переваги:
• Покращує читабельність, роблячи код більш зрозумілим.
• Спрощує розуміння логіки коду.
• Зменшує ймовірність помилок при введенні виразу.


                                                                                             3
ПРИКЛАД   EXTRACT VARIABLE
                  Виділення змінної




                                      4
                       REPLACE NESTED CONDITIONAL
                               WITH GUARD CLAUSES
                                             Заміна вкладених умов захисними виразами


Мета: Заміна глибоко вкладених умовних конструкцій на послідовність простих умов, які
перевіряються на початку функції.
Коли використовувати: Коли умовні конструкції стають занадто складними і утрудняють
розуміння коду.
Переваги:
• Покращує читабельність, роблячи код більш лінійним.
• Спрощує логіку програми.
• Зменшує кількість вкладеностей.


                                                                                        5
          REPLACE NESTED CONDITIONAL
ПРИКЛАД
                  WITH GUARD CLAUSES
                  Заміна вкладених умов захисними виразами




                                                             6
                                                 ВИСНОВОК
• Використання наведених методів рефакторингу є важливою практикою в
  сучасній розробці програмного забезпечення, яка допомагає
  підтримувати код у хорошому стані та полегшує його подальшу
  модифікацію.




                                                                       7
ДЯКУЮ ЗА УВАГУ!
